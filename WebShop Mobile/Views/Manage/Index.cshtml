@model WebShop_Mobile.Models.IndexUserViewModel
@{
    ViewBag.Title = "Manage your account " + Model.userViewModel.Email;
}

<h2>@ViewBag.Title.</h2>

<p class="text-success">@ViewBag.StatusMessage</p>
<div id="Change_Password">
    <h4>Change your account settings</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>Password:</dt>
        <dd>
            [
            @if (Model.indexViewModel.HasPassword)
            {
                @Html.ActionLink("Change your password", "ChangePassword")
            }
            else
            {
                @Html.ActionLink("Create", "SetPassword")
            }
            ]
        </dd>
    </dl>
</div>
<br />
<div id="Profile">
    <h4>Profile</h4>
    <hr />
    <div class="col-md-offset-1 row">
        <div class="col-md-2">
            @Html.LabelFor(x => x.userViewModel.Email)
            <div class="text-dark">
                @Html.DisplayFor(x => x.userViewModel.Email)
            </div>
        </div>
        <div class="col-md-2">
            @Html.LabelFor(x => x.userViewModel.EmailConfirmed)
            <div>
                @Html.DisplayFor(x => x.userViewModel.EmailConfirmed)
            </div>
        </div>
        <div class="col-md-2">
            @Html.LabelFor(x => x.userViewModel.Firstname)
            <div class="text-dark">
                @Html.DisplayFor(x => x.userViewModel.Firstname)
            </div>
        </div>
        <div class="col-md-2">
            @Html.LabelFor(x => x.userViewModel.Lastname)
            <div class="text-dark">
                @Html.DisplayFor(x => x.userViewModel.Lastname)
            </div>
        </div>
        <div class="col-md-2">
            @Html.LabelFor(x => x.userViewModel.PhoneNumber)
            <div class="text-dark">
                @Html.DisplayFor(x => x.userViewModel.PhoneNumber)
            </div>
        </div>
        <div class="col-md-2">
            @Html.LabelFor(x => x.userViewModel.PhoneNumberConfirmed)
            <div>
                @Html.DisplayFor(x => x.userViewModel.PhoneNumberConfirmed)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-offset-2 col-md-3">
            <div>
                @Html.LabelFor(x => x.userViewModel.BillingAdress)
                <div class="text-dark">
                    @Html.DisplayFor(x => x.userViewModel.BillingAdress)
                </div>
            </div>
            <br />
            <div>
                @Html.LabelFor(x => x.userViewModel.BillingCity)
                <div class="text-dark">
                    @Html.DisplayFor(x => x.userViewModel.BillingCity)
                </div>
            </div>
            <br />
            <div>
                @Html.LabelFor(x => x.userViewModel.BillingZip)
                <div class="text-dark">
                    @Html.DisplayFor(x => x.userViewModel.BillingZip)
                </div>
            </div>
        </div>
        <div class="col-md-offset-2 col-md-3">
            <div>
                @Html.LabelFor(x => x.userViewModel.DeliveryAdress)
                <div class="text-dark">
                    @Html.DisplayFor(x => x.userViewModel.DeliveryAdress)
                </div>
            </div>
            <br />
            <div>
                @Html.LabelFor(x => x.userViewModel.DeliveryCity)
                <div class="text-dark">
                    @Html.DisplayFor(x => x.userViewModel.DeliveryCity)
                </div>
            </div>
            <br />
            <div>
                @Html.LabelFor(x => x.userViewModel.DeliveryZip)
                <div class="text-dark">
                    @Html.DisplayFor(x => x.userViewModel.DeliveryZip)
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<div id="Order_History">
    <h4>Order History</h4>
    <hr />
    <div class="col-md-offset-1">
        @foreach (var item in Model.userViewModel.Orders)
        {
            <h4>Order: @item.OrderDate Processed: @if (item.Processed){<span>Yes</span>}else{<span>No</span>}</h4>
            <div>@Html.ActionLink("Open order", "Order", "Product", new {orderId = item.Id }, null)</div>
        }
    </div>
</div>



        @*<dt>External Logins:</dt>
        <dd>
            @Model.Logins.Count [
            @Html.ActionLink("Manage", "ManageLogins") ]
        </dd>*@
        @*
            Phone Numbers can used as a second factor of verification in a two-factor authentication system.
             
             See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication using SMS.
             
             Uncomment the following block after you have set up two-factor authentication
        *@
        @*  
            <dt>Phone Number:</dt>
            <dd>
                @(Model.PhoneNumber ?? "None")
                @if (Model.PhoneNumber != null)
                {
                    <br />
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Change", "AddPhoneNumber")&nbsp;&nbsp;]</text>
                    using (Html.BeginForm("RemovePhoneNumber", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>[<input type="submit" value="Remove" class="btn-link" />]</text>
                    }
                }
                else
                {
                    <text>[&nbsp;&nbsp;@Html.ActionLink("Add", "AddPhoneNumber")
                }
            </dd>
        *@
        @*<dt>Two-Factor Authentication:</dt>*@
        @*<dd>
            <p>
                There are no two-factor authentication providers configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                for details on setting up this ASP.NET application to support two-factor authentication.
            </p>
            @if (Model.TwoFactor)
                {
                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Enabled
                        <input type="submit" value="Disable" class="btn btn-link" />
                        </text>
                    }
                }
                else
                {
                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()
                        <text>Disabled
                        <input type="submit" value="Enable" class="btn btn-link" />
                        </text>
                    }
                }
        </dd>*@

