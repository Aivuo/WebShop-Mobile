@model WebShop_Mobile.Models.TestProduct

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>TestProduct</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleaseYear, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleaseYear, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleaseYear, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Colors, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Red))
                { <label><input type="checkbox" value="0" id="ColorCheckbox" name="Colors" checked/>Red</label> 
                } else
                { <label><input type="checkbox" value="0" id="ColorCheckbox" name="Colors"/>Red</label> }

                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Blue))
                { <label><input type="checkbox" value="1" id="ColorCheckbox" name="Colors" checked/>Blue</label> 
                } else
                { <label><input type="checkbox" value="1" id="ColorCheckbox" name="Colors"/>Blue</label> }

                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Green))
                { <label><input type="checkbox" value="2" id="ColorCheckbox" name="Colors" checked/>Green</label> 
                } else
                { <label><input type="checkbox" value="2" id="ColorCheckbox" name="Colors"/>Green</label> }

                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Yellow))
                { <label><input type="checkbox" value="3" id="ColorCheckbox" name="Colors" checked/>Yellow</label> 
                } else
                { <label><input type="checkbox" value="3" id="ColorCheckbox" name="Colors"/>Yellow</label> }
                
                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Purple))
                { <label><input type="checkbox" value="4" id="ColorCheckbox" name="Colors" checked/>Purple</label> 
                } else
                { <label><input type="checkbox" value="4" id="ColorCheckbox" name="Colors"/>Purple</label> }

                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Pink))
                { <label><input type="checkbox" value="5" id="ColorCheckbox" name="Colors" checked/>Pink</label> 
                } else
                { <label><input type="checkbox" value="5" id="ColorCheckbox" name="Colors"/>Pink</label> }

                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Silver))
                { <label><input type="checkbox" value="6" id="ColorCheckbox" name="Colors" checked/>Silver</label> 
                } else
                { <label><input type="checkbox" value="6" id="ColorCheckbox" name="Colors"/>Silver</label> }

                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Gold))
                { <label><input type="checkbox" value="7" id="ColorCheckbox" name="Colors" checked/>Gold</label> 
                } else
                { <label><input type="checkbox" value="7" id="ColorCheckbox" name="Colors"/>Gold</label> }

                @if (Model.Colors.Contains(WebShop_Mobile.Models.TestProduct.Color.Obsidian))
                { <label><input type="checkbox" value="8" id="ColorCheckbox" name="Colors" checked/>Obsidian</label> 
                } else
                { <label><input type="checkbox" value="8" id="ColorCheckbox" name="Colors"/>Obsidian</label> }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manufacturer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manufacturer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Manufacturer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScreenResolution, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScreenResolution, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ScreenResolution, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Retina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Retina)
                    @Html.ValidationMessageFor(model => model.Retina, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CameraMP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CameraMP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CameraMP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Frontpage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Frontpage)
                    @Html.ValidationMessageFor(model => model.Frontpage, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Discontinued, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Discontinued)
                    @Html.ValidationMessageFor(model => model.Discontinued, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
